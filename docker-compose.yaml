services:
  backend:
    build:
      dockerfile: ./backend/Dockerfile
    volumes:
      - ./backend:/code/backend
    env_file:
      - ./.env
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/project_tracker
      MCP_SERVER_URL: http://mcp:4000-db/mcp
    container_name: project-tracker-backend-fastapi
    ports:
      - "8000:8000"
    depends_on:
      - db

  workflow:
    build:
      dockerfile: ./workflow/Dockerfile
    volumes:
      - ./workflow:/code/workflow
    env_file:
      - ./.env
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/project_tracker
      MCP_SERVER_DB_URL: http://mcp-db:4000/mcp
      MCP_SERVER_GEMINI_URL: http://mcp-gemini:4001/mcp
      REDIS_URL: redis://redis:6379/0
    container_name: project-tracker-workflow-fastapi
    ports:
      - "8080:8080"
    depends_on:
      - backend
      - db
      - redis

  db:
    image: postgres:15
    container_name: project-tracker-db-1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: project_tracker
    ports:
      - "5432:5432"

  mcp-db:
    build: mcp-server-db
    volumes:
      - ./mcp-server-db:/app/mcp-server-db
    env_file:
      - ./.env
    environment:
      BACKEND_FASTAPI_BASE: http://backend:8000
    container_name: project-tracker-mcp-db
    restart: always
    ports:
      - "4000:4000"
    depends_on:
      - backend

  mcp-gemini:
    build: mcp-server-gemini
    volumes:
      - ./mcp-server-gemini:/app/mcp-server-gemini
    env_file:
      - ./.env
    container_name: project-tracker-mcp-gemini
    restart: always
    ports:
      - "4001:4001"
    depends_on:
      - backend

  frontend:
    build:
      dockerfile: ./frontend/Dockerfile
    volumes:
      - ./frontend:/code/frontend
    env_file:
      - ./.env
    environment:
      WORKFLOW_API_BASE: http://workflow:8080
    container_name: project-tracker-frontend
    restart: always
    ports:
      - "7860:7860"
    depends_on:
      - workflow

  redis:
    image: redis:8-alpine
    container_name: project-tracker-redis_data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis_data-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 20